{"remainingRequest":"C:\\Users\\herza\\Desktop\\dene\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\herza\\Desktop\\dene\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\herza\\Desktop\\dene\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\herza\\Desktop\\dene\\frontend\\src\\views\\Home.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\herza\\Desktop\\dene\\frontend\\src\\views\\Home.vue","mtime":1717671702913},{"path":"C:\\Users\\herza\\Desktop\\dene\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1717477469769},{"path":"C:\\Users\\herza\\Desktop\\dene\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1717477468806},{"path":"C:\\Users\\herza\\Desktop\\dene\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1717477469769},{"path":"C:\\Users\\herza\\Desktop\\dene\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1717477473567}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE1vbmFjb0VkaXRvciBmcm9tICJAZ3VvbGFvL3Z1ZS1tb25hY28tZWRpdG9yIjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIE1vbmFjb0VkaXRvcgogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGF1dGhUb2tlbnM6IHsKICAgICAgICBCZWFyZXI6ICIiLAogICAgICAgIGFwaUtleTogIiIsCiAgICAgICAgb0F1dGgyOiAiIgogICAgICB9LAogICAgICBzZWxlY3RlZEdlbmVyYXRvcjogJycsCiAgICAgIGdlbmVyYXRlZENvZGU6ICIiLAogICAgICB0ZXN0UmVzdWx0czogIiIsCiAgICAgIHNlbGVjdGVkRmlsZTogbnVsbCwKICAgICAgaXNFZGl0YWJsZTogZmFsc2UsCiAgICAgIGVycm9yTWVzc2FnZTogIiIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGxvYWRGaWxlKCkgewogICAgICB0aGlzLiRyZWZzLmZpbGVJbnB1dC5jbGljaygpOwogICAgfSwKICAgIG9uRmlsZUNoYW5nZShldmVudCkgewogICAgICB0aGlzLnNlbGVjdGVkRmlsZSA9IGV2ZW50LnRhcmdldC5maWxlc1swXTsKICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSAiIjsKICAgIH0sCiAgICBhc3luYyBnZW5lcmF0ZUNvZGUoKSB7CiAgICAgIHRoaXMuZXJyb3JNZXNzYWdlID0gIiI7CiAgICAgIGlmICghdGhpcy5zZWxlY3RlZEZpbGUpIHsKICAgICAgICB0aGlzLmVycm9yTWVzc2FnZSA9ICJMw7x0ZmVuIGJpciBkb3N5YSBzZcOnaW5pei4iOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBpZiAoIXRoaXMuc2VsZWN0ZWRHZW5lcmF0b3IpIHsKICAgICAgICB0aGlzLmVycm9yTWVzc2FnZSA9ICJMw7x0ZmVuIGJpciBtZXRvdCBzZcOnaW5pei4iOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBjb25zb2xlLmxvZygnR2VuZXJhdGluZyBjb2RlLi4uJyk7CiAgICAgIGNvbnNvbGUubG9nKCdTZWxlY3RlZCBmaWxlOicsIHRoaXMuc2VsZWN0ZWRGaWxlKTsKICAgICAgY29uc29sZS5sb2coJ0F1dGggdG9rZW5zOicsIHRoaXMuYXV0aFRva2Vucyk7CiAgICAgIGNvbnNvbGUubG9nKCdTZWxlY3RlZCBnZW5lcmF0b3I6JywgdGhpcy5zZWxlY3RlZEdlbmVyYXRvcik7CiAgICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZmlsZScsIHRoaXMuc2VsZWN0ZWRGaWxlKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCdhdXRoVG9rZW5zJywgSlNPTi5zdHJpbmdpZnkodGhpcy5hdXRoVG9rZW5zKSk7CiAgICAgIGZvcm1EYXRhLmFwcGVuZCgnc2VsZWN0ZWRHZW5lcmF0b3JzJywgSlNPTi5zdHJpbmdpZnkoW3RoaXMuc2VsZWN0ZWRHZW5lcmF0b3JdKSk7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2dlbmVyYXRlLWNvZGUnLCB7CiAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgIGJvZHk6IGZvcm1EYXRhCiAgICAgICAgfSk7CiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgewogICAgICAgICAgY29uc3QgZXJyb3IgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7CiAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiByZXNwb25zZTonLCBlcnJvcik7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7CiAgICAgICAgY29uc29sZS5sb2coJ0dlbmVyYXRlZCBjb2RlOicsIGRhdGEuZ2VuZXJhdGVkQ29kZSk7CiAgICAgICAgdGhpcy5nZW5lcmF0ZWRDb2RlID0gZGF0YS5nZW5lcmF0ZWRDb2RlOwogICAgICAgIHRoaXMudGVzdFJlc3VsdHMgPSAiIjsgLy8gVGVzdCBzb251w6dsYXLEsW7EsSB0ZW1pemxlCiAgICAgICAgdGhpcy4kcmVmcy50ZXN0UmVzdWx0cy5yZWFkT25seSA9IHRydWU7IC8vIFJlYWRvbmx5IHlhcAogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGdlbmVyYXRpbmcgY29kZTonLCBlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBydW5UZXN0cygpIHsKICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSAiIjsKICAgICAgaWYgKCF0aGlzLmdlbmVyYXRlZENvZGUpIHsKICAgICAgICB0aGlzLmVycm9yTWVzc2FnZSA9ICJMw7x0ZmVuIMO2bmNlIGtvZCBvbHXFn3R1cnVuLiI7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKCdSdW5uaW5nIHRlc3RzLi4uJyk7CiAgICAgIGNvbnNvbGUubG9nKCdHZW5lcmF0ZWQgY29kZTonLCB0aGlzLmdlbmVyYXRlZENvZGUpOwogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9ydW4tdGVzdHMnLCB7CiAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgICAgfSwKICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgY29kZTogdGhpcy5nZW5lcmF0ZWRDb2RlCiAgICAgICAgICB9KQogICAgICAgIH0pOwogICAgICAgIGlmICghcmVzcG9uc2Uub2spIHsKICAgICAgICAgIGNvbnN0IGVycm9yID0gYXdhaXQgcmVzcG9uc2UuanNvbigpOwogICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gcmVzcG9uc2U6JywgZXJyb3IpOwogICAgICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSAiVGVzdGxlciDDp2FsxLHFn3TEsXLEsWzEsXJrZW4gYmlyIGhhdGEgb2x1xZ90dS4iOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpOwogICAgICAgIGNvbnNvbGUubG9nKCdUZXN0IHJlc3VsdHM6JywgZGF0YS50ZXN0UmVzdWx0cyk7CiAgICAgICAgdGhpcy50ZXN0UmVzdWx0cyA9IGRhdGEudGVzdFJlc3VsdHM7CiAgICAgICAgdGhpcy4kcmVmcy50ZXN0UmVzdWx0cy5yZWFkT25seSA9IHRydWU7IC8vIFJlYWRvbmx5IMO2emVsbGnEn2luaSBrYWxkxLFyCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcnVubmluZyB0ZXN0czonLCBlcnJvcik7CiAgICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSAiVGVzdGxlciDDp2FsxLHFn3TEsXLEsWzEsXJrZW4gYmlyIGhhdGEgb2x1xZ90dS4iOwogICAgICB9CiAgICB9LAogICAgZG93bmxvYWRDb2RlKCkgewogICAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpOwogICAgICBjb25zdCBmaWxlID0gbmV3IEJsb2IoW3RoaXMuZ2VuZXJhdGVkQ29kZV0sIHsKICAgICAgICB0eXBlOiAndGV4dC9wbGFpbicKICAgICAgfSk7CiAgICAgIGVsZW1lbnQuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZSk7CiAgICAgIGVsZW1lbnQuZG93bmxvYWQgPSAiZ2VuZXJhdGVkQ29kZS5qcyI7CiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZWxlbWVudCk7CiAgICAgIGVsZW1lbnQuY2xpY2soKTsKICAgIH0sCiAgICBkb3dubG9hZFRlc3RzKCkgewogICAgICBjb25zdCB0ZXN0Q29kZSA9IHRoaXMuZ2VuZXJhdGVUZXN0Q29kZSgpOwogICAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpOwogICAgICBjb25zdCBmaWxlID0gbmV3IEJsb2IoW3Rlc3RDb2RlXSwgewogICAgICAgIHR5cGU6ICd0ZXh0L3BsYWluJwogICAgICB9KTsKICAgICAgZWxlbWVudC5ocmVmID0gVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlKTsKICAgICAgZWxlbWVudC5kb3dubG9hZCA9ICJ0ZXN0Q29kZS5qcyI7CiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZWxlbWVudCk7CiAgICAgIGVsZW1lbnQuY2xpY2soKTsKICAgIH0sCiAgICBnZW5lcmF0ZVRlc3RDb2RlKCkgewogICAgICBjb25zdCBtZXRob2QgPSB0aGlzLnNlbGVjdGVkR2VuZXJhdG9yLnJlcGxhY2UoIiBHZW5lcmF0b3IiLCAiIik7CiAgICAgIGNvbnN0IHVybHMgPSB0aGlzLmV4dHJhY3RVcmxzKHRoaXMuZ2VuZXJhdGVkQ29kZSk7CiAgICAgIGxldCB0ZXN0Q29kZSA9IGAKaW1wb3J0IHsgc2VuZEdldFJlcXVlc3QsIHNlbmRQb3N0UmVxdWVzdCwgc2VuZFB1dFJlcXVlc3QsIHNlbmREZWxldGVSZXF1ZXN0IH0gZnJvbSAnLi4vc3JjL3NlbmRSZXF1ZXN0cyc7CmltcG9ydCB7IGV4cGVjdCB9IGZyb20gJ2NoYWknOwppbXBvcnQgJ21vY2hhJzsKCmRlc2NyaWJlKCcke21ldGhvZH0gUmVxdWVzdHMnLCAoKSA9PiB7CmA7CiAgICAgIHVybHMuZm9yRWFjaCh1cmwgPT4gewogICAgICAgIGNvbnN0IHRlc3ROYW1lID0gdXJsLnNwbGl0KCc/JylbMF0uc3BsaXQoJy8nKS5wb3AoKTsKICAgICAgICB0ZXN0Q29kZSArPSBgCiAgaXQoJyR7dGVzdE5hbWV9JywgKGRvbmUpID0+IHsKICAgIHNlbmQke21ldGhvZH1SZXF1ZXN0KCdHRVQnLCAnJHt1cmx9Jywge30pCiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICBleHBlY3QocmVzcG9uc2Uuc3RhdHVzKS50by5lcXVhbCgyMDApOwogICAgICAgIGRvbmUoKTsKICAgICAgfSkKICAgICAgLmNhdGNoKGVycm9yID0+IHsKICAgICAgICBkb25lKGVycm9yKTsKICAgICAgfSk7CiAgfSk7CmA7CiAgICAgIH0pOwogICAgICB0ZXN0Q29kZSArPSBgCn0pOwogICAgICBgOwogICAgICByZXR1cm4gdGVzdENvZGU7CiAgICB9LAogICAgZXh0cmFjdFVybHMoY29kZSkgewogICAgICBjb25zdCB1cmxQYXR0ZXJuID0gL3NlbmRcdytSZXF1ZXN0XCguKz8oWyciYF0pKC4rPylcMS9nOwogICAgICBsZXQgbWF0Y2g7CiAgICAgIGNvbnN0IHVybHMgPSBbXTsKICAgICAgd2hpbGUgKChtYXRjaCA9IHVybFBhdHRlcm4uZXhlYyhjb2RlKSkgIT09IG51bGwpIHsKICAgICAgICB1cmxzLnB1c2gobWF0Y2hbMl0pOwogICAgICB9CiAgICAgIHJldHVybiB1cmxzOwogICAgfQogIH0KfTs="},{"version":3,"names":["MonacoEditor","components","data","authTokens","Bearer","apiKey","oAuth2","selectedGenerator","generatedCode","testResults","selectedFile","isEditable","errorMessage","methods","uploadFile","$refs","fileInput","click","onFileChange","event","target","files","generateCode","console","log","formData","FormData","append","JSON","stringify","response","fetch","method","body","ok","error","json","readOnly","runTests","headers","code","downloadCode","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","appendChild","downloadTests","testCode","generateTestCode","replace","urls","extractUrls","forEach","url","testName","split","pop","urlPattern","match","exec","push"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <nav class=\"navbar\">\r\n      <button @click=\"uploadFile\">Dosya Se√ß</button>\r\n      <input type=\"file\" ref=\"fileInput\" @change=\"onFileChange\" style=\"display: none\" />\r\n      <span>{{ selectedFile ? selectedFile.name : \"No file selected\" }}</span>\r\n    </nav>\r\n    <div class=\"main-container\">\r\n      <div class=\"controls\">\r\n        <div class=\"auth-inputs\">\r\n          <input type=\"text\" v-model=\"authTokens.Bearer\" placeholder=\"Bearer Token\" />\r\n          <input type=\"text\" v-model=\"authTokens.apiKey\" placeholder=\"API Key\" />\r\n          <input type=\"text\" v-model=\"authTokens.oAuth2\" placeholder=\"OAuth2 Token\" />\r\n        </div>\r\n        <div class=\"checkboxes\">\r\n          <label><input type=\"radio\" value=\"Post Generator\" v-model=\"selectedGenerator\" /> Post Generator</label>\r\n          <label><input type=\"radio\" value=\"Get Generator\" v-model=\"selectedGenerator\" /> Get Generator</label>\r\n          <label><input type=\"radio\" value=\"Put Generator\" v-model=\"selectedGenerator\" /> Put Generator</label>\r\n          <label><input type=\"radio\" value=\"Delete Generator\" v-model=\"selectedGenerator\" /> Delete Generator</label>\r\n          <label><input type=\"radio\" value=\"All Methods Generator\" v-model=\"selectedGenerator\" /> All Methods Generator</label>\r\n        </div>\r\n        <div class=\"buttons\">\r\n          <button @click=\"generateCode\">Generate Code</button>\r\n          <button @click=\"runTests\">Run Tests</button>\r\n          <button @click=\"downloadCode\">Download Code</button>\r\n          <button @click=\"downloadTests\">Download Tests</button>\r\n          <label class=\"edit-toggle\">\r\n            <input type=\"checkbox\" v-model=\"isEditable\" /> D√ºzenle\r\n          </label>\r\n        </div>\r\n        <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n      </div>\r\n      <div class=\"editor-container\">\r\n        <monaco-editor\r\n          v-model=\"generatedCode\"\r\n          language=\"javascript\"\r\n          theme=\"vs-dark\"\r\n          :options=\"{ readOnly: !isEditable }\"\r\n          class=\"code-editor\"\r\n        />\r\n        <div class=\"result-container\">\r\n          <textarea v-model=\"testResults\" class=\"results-textarea\" ref=\"testResults\"></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MonacoEditor from \"@guolao/vue-monaco-editor\";\r\n\r\nexport default {\r\n  components: {\r\n    MonacoEditor\r\n  },\r\n  data() {\r\n    return {\r\n      authTokens: {\r\n        Bearer: \"\",\r\n        apiKey: \"\",\r\n        oAuth2: \"\"\r\n      },\r\n      selectedGenerator: '',\r\n      generatedCode: \"\",\r\n      testResults: \"\",\r\n      selectedFile: null,\r\n      isEditable: false,\r\n      errorMessage: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    uploadFile() {\r\n      this.$refs.fileInput.click();\r\n    },\r\n    onFileChange(event) {\r\n      this.selectedFile = event.target.files[0];\r\n      this.errorMessage = \"\";\r\n    },\r\n    async generateCode() {\r\n      this.errorMessage = \"\";\r\n      if (!this.selectedFile) {\r\n        this.errorMessage = \"L√ºtfen bir dosya se√ßiniz.\";\r\n        return;\r\n      }\r\n      if (!this.selectedGenerator) {\r\n        this.errorMessage = \"L√ºtfen bir metot se√ßiniz.\";\r\n        return;\r\n      }\r\n\r\n      console.log('Generating code...');\r\n      console.log('Selected file:', this.selectedFile);\r\n      console.log('Auth tokens:', this.authTokens);\r\n      console.log('Selected generator:', this.selectedGenerator);\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', this.selectedFile);\r\n      formData.append('authTokens', JSON.stringify(this.authTokens));\r\n      formData.append('selectedGenerators', JSON.stringify([this.selectedGenerator]));\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:3000/generate-code', {\r\n          method: 'POST',\r\n          body: formData\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const error = await response.json();\r\n          console.error('Error in response:', error);\r\n          return;\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Generated code:', data.generatedCode);\r\n        this.generatedCode = data.generatedCode;\r\n        this.testResults = \"\";  // Test sonu√ßlarƒ±nƒ± temizle\r\n        this.$refs.testResults.readOnly = true; // Readonly yap\r\n      } catch (error) {\r\n        console.error('Error generating code:', error);\r\n      }\r\n    },\r\n    async runTests() {\r\n      this.errorMessage = \"\";\r\n      if (!this.generatedCode) {\r\n        this.errorMessage = \"L√ºtfen √∂nce kod olu≈üturun.\";\r\n        return;\r\n      }\r\n\r\n      console.log('Running tests...');\r\n      console.log('Generated code:', this.generatedCode);\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:3000/run-tests', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ code: this.generatedCode })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const error = await response.json();\r\n          console.error('Error in response:', error);\r\n          this.errorMessage = \"Testler √ßalƒ±≈ütƒ±rƒ±lƒ±rken bir hata olu≈ütu.\";\r\n          return;\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Test results:', data.testResults);\r\n        this.testResults = data.testResults;\r\n        this.$refs.testResults.readOnly = true; // Readonly √∂zelliƒüini kaldƒ±r\r\n      } catch (error) {\r\n        console.error('Error running tests:', error);\r\n        this.errorMessage = \"Testler √ßalƒ±≈ütƒ±rƒ±lƒ±rken bir hata olu≈ütu.\";\r\n      }\r\n    },\r\n    downloadCode() {\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([this.generatedCode], { type: 'text/plain' });\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = \"generatedCode.js\";\r\n      document.body.appendChild(element); \r\n      element.click();\r\n    },\r\n    downloadTests() {\r\n      const testCode = this.generateTestCode();\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([testCode], { type: 'text/plain' });\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = \"testCode.js\";\r\n      document.body.appendChild(element); \r\n      element.click();\r\n    },\r\n    generateTestCode() {\r\n      const method = this.selectedGenerator.replace(\" Generator\", \"\");\r\n      const urls = this.extractUrls(this.generatedCode);\r\n      let testCode = `\r\nimport { sendGetRequest, sendPostRequest, sendPutRequest, sendDeleteRequest } from '../src/sendRequests';\r\nimport { expect } from 'chai';\r\nimport 'mocha';\r\n\r\ndescribe('${method} Requests', () => {\r\n`;\r\n\r\n      urls.forEach(url => {\r\n        const testName = url.split('?')[0].split('/').pop();\r\n        testCode += `\r\n  it('${testName}', (done) => {\r\n    send${method}Request('GET', '${url}', {})\r\n      .then(response => {\r\n        expect(response.status).to.equal(200);\r\n        done();\r\n      })\r\n      .catch(error => {\r\n        done(error);\r\n      });\r\n  });\r\n`;\r\n      });\r\n\r\n      testCode += `\r\n});\r\n      `;\r\n      return testCode;\r\n    },\r\n    extractUrls(code) {\r\n      const urlPattern = /send\\w+Request\\(.+?(['\"`])(.+?)\\1/g;\r\n      let match;\r\n      const urls = [];\r\n      while ((match = urlPattern.exec(code)) !== null) {\r\n        urls.push(match[2]);\r\n      }\r\n      return urls;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.home {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n}\r\n.navbar {\r\n  background-color: #2c3e50;\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n}\r\n.navbar button {\r\n  margin-right: 10px;\r\n}\r\n.navbar span {\r\n  color: white;\r\n}\r\n.main-container {\r\n  display: flex;\r\n  flex: 1;\r\n}\r\n.controls {\r\n  background-color: #ecf0f1;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 250px;\r\n}\r\n.auth-inputs input, .buttons button {\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n}\r\n.checkboxes {\r\n  margin-bottom: 20px;\r\n}\r\n.editor-container {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n}\r\n.code-editor {\r\n  flex: 1;\r\n  margin-bottom: 10px;\r\n}\r\n.result-container {\r\n  height: 200px;\r\n  padding: 10px;\r\n}\r\n.results-textarea {\r\n  height: 100%;\r\n  resize: none;\r\n  width: 100%;\r\n}\r\n.edit-toggle {\r\n  margin-top: 10px;\r\n}\r\n.error-message {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}
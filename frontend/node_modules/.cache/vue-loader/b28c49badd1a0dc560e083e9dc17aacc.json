{"remainingRequest":"C:\\Users\\herza\\Desktop\\dene\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\herza\\Desktop\\dene\\frontend\\src\\views\\Home.vue?vue&type=style&index=0&id=fae5bece&lang=css","dependencies":[{"path":"C:\\Users\\herza\\Desktop\\dene\\frontend\\src\\views\\Home.vue","mtime":1717656163596},{"path":"C:\\Users\\herza\\Desktop\\dene\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1717477469933},{"path":"C:\\Users\\herza\\Desktop\\dene\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1717477475282},{"path":"C:\\Users\\herza\\Desktop\\dene\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1717477471618},{"path":"C:\\Users\\herza\\Desktop\\dene\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1717477469769},{"path":"C:\\Users\\herza\\Desktop\\dene\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1717477473567}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouaG9tZSB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogIGhlaWdodDogMTAwdmg7DQp9DQoubmF2YmFyIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogIzJjM2U1MDsNCiAgcGFkZGluZzogMTBweDsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0Ow0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KfQ0KLm5hdmJhciBidXR0b24gew0KICBtYXJnaW4tcmlnaHQ6IDEwcHg7DQp9DQoubmF2YmFyIHNwYW4gew0KICBjb2xvcjogd2hpdGU7DQp9DQoubWFpbi1jb250YWluZXIgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBmbGV4OiAxOw0KfQ0KLmNvbnRyb2xzIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZjBmMTsNCiAgcGFkZGluZzogMTBweDsNCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7DQogIHdpZHRoOiAyNTBweDsNCn0NCi5hdXRoLWlucHV0cyBpbnB1dCwgLmJ1dHRvbnMgYnV0dG9uIHsNCiAgbWFyZ2luLWJvdHRvbTogMTBweDsNCiAgd2lkdGg6IDEwMCU7DQp9DQouY2hlY2tib3hlcyB7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQouZWRpdG9yLWNvbnRhaW5lciB7DQogIGZsZXg6IDE7DQogIGRpc3BsYXk6IGZsZXg7DQogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogIHBhZGRpbmc6IDEwcHg7DQp9DQouY29kZS1lZGl0b3Igew0KICBmbGV4OiAxOw0KICBtYXJnaW4tYm90dG9tOiAxMHB4Ow0KfQ0KLnJlc3VsdC1jb250YWluZXIgew0KICBoZWlnaHQ6IDIwMHB4Ow0KICBwYWRkaW5nOiAxMHB4Ow0KfQ0KLnJlc3VsdHMtdGV4dGFyZWEgew0KICBoZWlnaHQ6IDEwMCU7DQogIHJlc2l6ZTogbm9uZTsNCiAgd2lkdGg6IDEwMCU7DQp9DQouZWRpdC10b2dnbGUgew0KICBtYXJnaW4tdG9wOiAxMHB4Ow0KfQ0KLmVycm9yLW1lc3NhZ2Ugew0KICBjb2xvcjogcmVkOw0KICBtYXJnaW4tdG9wOiAxMHB4Ow0KfQ0K"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";AA+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <nav class=\"navbar\">\r\n      <button @click=\"uploadFile\">Dosya Seç</button>\r\n      <input type=\"file\" ref=\"fileInput\" @change=\"onFileChange\" style=\"display: none\" />\r\n      <span>{{ selectedFile ? selectedFile.name : \"No file selected\" }}</span>\r\n    </nav>\r\n    <div class=\"main-container\">\r\n      <div class=\"controls\">\r\n        <div class=\"auth-inputs\">\r\n          <input type=\"text\" v-model=\"authTokens.Bearer\" placeholder=\"Bearer Token\" />\r\n          <input type=\"text\" v-model=\"authTokens.apiKey\" placeholder=\"API Key\" />\r\n          <input type=\"text\" v-model=\"authTokens.oAuth2\" placeholder=\"OAuth2 Token\" />\r\n        </div>\r\n        <div class=\"checkboxes\">\r\n          <label><input type=\"radio\" value=\"Post Generator\" v-model=\"selectedGenerator\" /> Post Generator</label>\r\n          <label><input type=\"radio\" value=\"Get Generator\" v-model=\"selectedGenerator\" /> Get Generator</label>\r\n          <label><input type=\"radio\" value=\"Put Generator\" v-model=\"selectedGenerator\" /> Put Generator</label>\r\n          <label><input type=\"radio\" value=\"Delete Generator\" v-model=\"selectedGenerator\" /> Delete Generator</label>\r\n          <label><input type=\"radio\" value=\"All Methods Generator\" v-model=\"selectedGenerator\" /> All Methods Generator</label>\r\n        </div>\r\n        <div class=\"buttons\">\r\n          <button @click=\"generateCode\">Generate Code</button>\r\n          <button @click=\"runTests\">Run Tests</button>\r\n          <label class=\"edit-toggle\">\r\n            <input type=\"checkbox\" v-model=\"isEditable\" /> Düzenle\r\n          </label>\r\n        </div>\r\n        <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n      </div>\r\n      <div class=\"editor-container\">\r\n        <monaco-editor\r\n          v-model=\"generatedCode\"\r\n          language=\"javascript\"\r\n          theme=\"vs-dark\"\r\n          :options=\"{ readOnly: !isEditable }\"\r\n          class=\"code-editor\"\r\n        />\r\n        <div class=\"result-container\">\r\n          <textarea v-model=\"testResults\" class=\"results-textarea\"></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MonacoEditor from \"@guolao/vue-monaco-editor\";\r\nimport SwaggerParser from \"swagger-parser\";\r\n\r\nexport default {\r\n  components: {\r\n    MonacoEditor\r\n  },\r\n  data() {\r\n    return {\r\n      authTokens: {\r\n        Bearer: \"\",\r\n        apiKey: \"\",\r\n        oAuth2: \"\"\r\n      },\r\n      selectedGenerator: '',\r\n      generatedCode: \"\",\r\n      testResults: \"\",\r\n      selectedFile: null,\r\n      isEditable: false,\r\n      errorMessage: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    uploadFile() {\r\n      this.$refs.fileInput.click();\r\n    },\r\n    onFileChange(event) {\r\n      this.selectedFile = event.target.files[0];\r\n      this.errorMessage = \"\";\r\n      this.validateSwaggerFile();\r\n    },\r\n    async validateSwaggerFile() {\r\n      try {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          try {\r\n            const content = e.target.result;\r\n            await SwaggerParser.validate(JSON.parse(content));\r\n            this.errorMessage = \"\";\r\n          } catch (error) {\r\n            this.errorMessage = \"Yüklenen dosya geçerli bir Swagger dökümanı değil.\";\r\n            this.selectedFile = null;\r\n          }\r\n        };\r\n        reader.readAsText(this.selectedFile);\r\n      } catch (error) {\r\n        this.errorMessage = \"Dosya okunurken hata oluştu.\";\r\n        this.selectedFile = null;\r\n      }\r\n    },\r\n    async generateCode() {\r\n      this.errorMessage = \"\";\r\n      if (!this.selectedFile) {\r\n        this.errorMessage = \"Lütfen bir dosya seçiniz.\";\r\n        return;\r\n      }\r\n      if (!this.selectedGenerator) {\r\n        this.errorMessage = \"Lütfen bir metot seçiniz.\";\r\n        return;\r\n      }\r\n\r\n      console.log('Generating code...');\r\n      console.log('Selected file:', this.selectedFile);\r\n      console.log('Auth tokens:', this.authTokens);\r\n      console.log('Selected generator:', this.selectedGenerator);\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', this.selectedFile);\r\n      formData.append('authTokens', JSON.stringify(this.authTokens));\r\n      formData.append('selectedGenerators', JSON.stringify([this.selectedGenerator]));\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:3000/generate-code', {\r\n          method: 'POST',\r\n          body: formData\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const error = await response.json();\r\n          console.error('Error in response:', error);\r\n          return;\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Generated code:', data.generatedCode);\r\n        this.generatedCode = data.generatedCode;\r\n      } catch (error) {\r\n        console.error('Error generating code:', error);\r\n      }\r\n    },\r\n    async runTests() {\r\n      this.errorMessage = \"\";\r\n      if (!this.generatedCode) {\r\n        this.errorMessage = \"Lütfen önce kod oluşturun.\";\r\n        return;\r\n      }\r\n\r\n      console.log('Running tests...');\r\n      console.log('Generated code:', this.generatedCode);\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:3000/run-tests', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ code: this.generatedCode })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const error = await response.json();\r\n          console.error('Error in response:', error);\r\n          return;\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Test results:', data.testResults);\r\n        this.testResults = data.testResults;\r\n      } catch (error) {\r\n        console.error('Error running tests:', error);\r\n        this.errorMessage = \"Testleri çalıştırırken bir hata oluştu. Lütfen kodun formatını kontrol edin.\";\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.home {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n}\r\n.navbar {\r\n  background-color: #2c3e50;\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n}\r\n.navbar button {\r\n  margin-right: 10px;\r\n}\r\n.navbar span {\r\n  color: white;\r\n}\r\n.main-container {\r\n  display: flex;\r\n  flex: 1;\r\n}\r\n.controls {\r\n  background-color: #ecf0f1;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 250px;\r\n}\r\n.auth-inputs input, .buttons button {\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n}\r\n.checkboxes {\r\n  margin-bottom: 20px;\r\n}\r\n.editor-container {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n}\r\n.code-editor {\r\n  flex: 1;\r\n  margin-bottom: 10px;\r\n}\r\n.result-container {\r\n  height: 200px;\r\n  padding: 10px;\r\n}\r\n.results-textarea {\r\n  height: 100%;\r\n  resize: none;\r\n  width: 100%;\r\n}\r\n.edit-toggle {\r\n  margin-top: 10px;\r\n}\r\n.error-message {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"]}]}